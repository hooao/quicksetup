USER=`whoami`

ISDOCKER=`cat /proc/1/cgroup | grep docker | wc -l`
if [ "$ISDOCKER" == "0" ]; then
if [ $(dmesg | grep VMware | wc -l) != "0" ]; then
  gnbroot="/data/git/gnb"
else
  gnbroot="/var/fpwork/$USER/gnb"
fi
alias 5gg='source $gnbroot/set_gnb_env.sh'
else
gnbroot="/workspace/"
alias 5gg='echo "XD"'
fi


alias l='ls -lh'
alias lll='ls -ahlt'
alias llll='ls -ahls'
alias gnb='cd $gnbroot'
alias up='cd $gnbroot/uplane/'
alias h4='cd /var/fpwork/$USER/'
alias tt='tmux attach -t 0'
alias dk='docker-compose -f docker-compose.yml -f ~/cn1-bash.yml run --rm cn1-bash 2>/dev/null'
#alias clion='cd /var/fpwork/${USER}/gnb/uplane && 5gg && source L2-PS/setup.sh --target=asik-x86_64-ps_lfs-dynamic-linker-on-gcc9 && clion.sh'
alias rmd='rm -rf'
alias getcode='git clone "ssh://$USER@gerrit.ext.net.nokia.com:29418/MN/5G/NB/gnb" && (cd "gnb" && gitdir=$(git rev-parse --git-dir); curl -o ${gitdir}/hooks/commit-msg https://gerrit.ext.net.nokia.com/gerrit/static/commit-msg ; chmod +x ${gitdir}/hooks/commit-msg)'
alias pp='branch=`git branch | grep ^\* | cut -c 3-` && git push origin HEAD:refs/for/$branch'
alias ppp='branch=`git branch | grep ^\* | cut -c 3-` && git push origin HEAD:refs/for/$branch%private'
alias gsubmodule='gnb && git checkout externals/ && git submodule sync --recursive && git submodule update --init --recursive && ./buildscript/universal/run_nb_scripts.sh'
#alias pre="git log  --pretty=format:'%ci %h %s    ||| %C(green)<%an> %ae%Creset' "
alias pre="git log origin/master --pretty=format:'%ci %h %s %C(green)[%an]' "
alias ss="source ~/.bashrc"
#alias gt="export cur=`pwd` && gtags --skip-symlink=d -O>/dev/null && if [ ! -f "GPATH" ]; then ln -s /tmp`pwd`/GRTAGS GRTAGS && ln -s /tmp`pwd`/GPATH GPATH && ln -s /tmp`pwd`/GTAGS GTAGS; fi &"
alias gt="export cur=`pwd` && gtags -O>/dev/null && if [ ! -f "GPATH" ]; then ln -s /tmp`pwd`/GRTAGS GRTAGS && ln -s /tmp`pwd`/GPATH GPATH && ln -s /tmp`pwd`/GTAGS GTAGS; fi &"
alias gtc="rm -f GRTAGS GTAGS GPATH"
alias gits='git status'
alias gg='git log'
alias gfetch='git clone "ssh://$USER@gerrit.ext.net.nokia.com:29418/MN/5G/NB/gnb" && (cd "gnb" && gitdir=$(git rev-parse --git-dir); curl -o ${gitdir}/hooks/commit-msg https://gerrit.ext.net.nokia.com/gerrit/static/commit-msg ; chmod +x ${gitdir}/hooks/commit-msg)'
alias gitca='git commit --amend'
alias gitcan='git commit --amend --no-edit'
alias gitcommit='gnb && python3 tools/commitMessageGenerator/commitMessageGenerator.py'
export cmprdst=10.57.233.84:/user/toor4nsn/
export PARALLEL_BUILD_JOBS=16
alias cleantheshell='export > ~/.tmpexport && for it in `cat ~/.cleanshell.tmp ~/.tmpexport | cut -d "=" -f 1 | sort | uniq -u | cut -d " " -f 3`; do unset $it 2>&-; done'
alias cs='export > /home/$USER/.tmpexport && for it in `cat ~/.cleanshell.tmp ~/.tmpexport | cut -d "=" -f 1 | sort | uniq -u | cut -d " " -f 3`; do unset $it 2>&-; done'
alias chgnb='unset gnbroot &&  gnbroot=`readlink -f ./`'




alias akwalk='ak_walk(){
file=`$1`
action=$2
#for item in $file;  do echo "$item" ;done
for item in $file;  do $action $item" ;done
 } 
ak_walk'

alias akdiff='ak_diff(){
if [ $# -eq 0 ]; then
  echo "List all commits between two commits"
  echo "Usage: akdiff commitID1 commitID2"
  return 
fi
#git fetch 1>/dev/null
tmpstring=`pre | grep -E "$1|$2"|cut -d " " -f4`
earlyCommit=`echo $tmpstring | cut -d " " -f2`
laterCommit=`echo $tmpstring | cut -d " " -f1`
git log --pretty=oneline $earlyCommit...$laterCommit 
}
ak_diff'

alias akpush='ak_push(){
case $ in
 master)
  git push origin HEAD:refs/for/master
 ;;
 *)
  git push origin HEAD:refs/for/rel/$1
  if [ $? -ne 0 ]; then 
    echo "seems no such branch $1"
    echo "====related branch about $1"
    git branch -a | grep -i $1
  fi
 esac
}
ak_push'

alias akrun='ak_run(){
$gnbroot/uplane/sct/run_on_asik/SRunner.py host --l2ps --test $@
}
ak_run'

alias akbuild='_b(){
if [ "$ISDOCKER" == "0" ]; then
    echo "Not inside docker !"
    echo "Try to startup docker environment, please rerun \"akbuild $@ \""
    dk
    return
fi
if [ "$2" == "--clean" ]; then
    gnb && rm -rf externals/* && git clean -dfx
    up && rm -rf sdkuplane/ && rm -rf build/*
fi 
case $1 in 
 sml2ps|smps|ps|l2ps) 
   5gg && gsubmodule && up && source L2-PS/setup.sh --target=sm6-snowfish-dynamic-linker-on-gcc9 && ./buildscript/L2-PS/run build_host
   ;;
 l2pssct|sct) 
   5gg&& gsubmodule &&up&& source L2-PS/setup.sh --target=sm6-snowfish-dynamic-linker-on-gcc9 && mkdir -p build/tickler && cd build/tickler && cmake -GNinja ../../sct/tickler -DSCT_COMP_L2PS=ON -DCMAKE_BUILD_TYPE=Debug && ninja -j $PARALLEL_BUILD_JOBS
   ;; 
 fuse|l2psfuse) 
   5gg&& gsubmodule &&up&& source L2-PS/setup.sh --target=sm6-snowfish-dynamic-linker-on-gcc9 && buildscript/L2-PS/run sct_build --for-fuse-l2ps-host
   ;; 
 l2psut) 
   5gg && gsubmodule && up && source L2-PS/setup.sh --target=asik-x86_64-ps_lfs-dynamic-linker-on-gcc9 && ./buildscript/L2-PS/run ut_build && ./buildscript/L2-PS/run ut_run
   ;;
 l2pstarget) 
   5gg && gsubmodule && up && source L2-PS/setup.sh --target=asik-x86_64-ps_lfs-gcc9 && buildscript/L2-PS/run sct_build --for-target
   ;;
 l2pspack) 
   up && ./buildscript/L2-PS/run package
   ;;
 l2commut)
   5gg && gsubmodule && up && source L2-PS/setup.sh --target=asik-x86_64-ps_lfs-dynamic-linker-on-gcc9 && ./buildscript/L2-RT_common/run ut_build
   ;;
 lo) 
   5gg && gsubmodule && up && source L2-LO/setup.sh --target=sm6-snowfish-dynamic-linker-on-gcc9 && ./buildscript/L2-LO/run build
   ;;
 *)
   echo "Supported parameter [l2ps,ps/lo/l2psut/l2psut/l2pssct,sct/fuse,l2psfuse/l2pstarget/l2pspack/l2commut]" ;;
 esac
 };
_b'

